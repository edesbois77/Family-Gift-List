// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  name         String?
  password     String
  createdAt    DateTime       @default(now())
  lists        GiftList[]
  reservations Reservation[]
  accesses     ListAccess[]   // <-- add this line
}

model GiftList {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  description String?
  eventDate   DateTime?
  shareCode   String     @unique
  isPublic    Boolean    @default(false)
  createdAt   DateTime   @default(now())
  gifts       Gift[]
  accesses    ListAccess[]
}

model Gift {
  id           String   @id @default(cuid())
  giftListId   String
  giftList     GiftList @relation(fields: [giftListId], references: [id], onDelete: Cascade)
  title        String
  description  String?
  imageUrl     String?
  price        Float?
  deliveryCost Float?
  size         String?
  productUrl   String?
  updatedAt    DateTime @updatedAt @default(now())  // <-- add @default(now())
  quantity     Int      @default(1)
  priority     Int      @default(3)
  createdAt    DateTime @default(now())
  reservations Reservation[]
}

model Reservation {
  id         String   @id @default(cuid())
  giftId     String
  gift       Gift     @relation(fields: [giftId], references: [id], onDelete: Cascade)
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quantity   Int      @default(1)
  isPurchased Boolean @default(false)
  notes      String?
  createdAt  DateTime @default(now())

  @@unique([userId, giftId])
}

model ListAccess {
  id         String   @id @default(cuid())
  giftListId String
  userId     String
  accessedAt DateTime @default(now())

  giftList   GiftList @relation(fields: [giftListId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, giftListId])
}