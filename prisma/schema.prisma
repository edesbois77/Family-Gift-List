// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now()) @map("created_at")

  giftLists    GiftList[]
  reservations Reservation[]
  listAccess   ListAccess[]

  @@map("users")
}

model GiftList {
  id          Int      @id @default(autoincrement())
  userId      Int      @map("user_id")
  title       String
  description String?
  eventDate   DateTime? @map("event_date")
  shareCode   String   @unique @map("share_code")
  isPublic    Boolean  @default(false) @map("is_public")
  createdAt   DateTime @default(now()) @map("created_at")

  user       User         @relation(fields: [userId], references: [id])
  gifts      Gift[]
  listAccess ListAccess[]

  @@map("gift_lists")
}

model Gift {
  id           Int     @id @default(autoincrement())
  listId       Int     @map("list_id")
  title        String
  description  String?
  imageUrl     String? @map("image_url")
  price        Float?
  deliveryCost Float?  @map("delivery_cost")
  sizeVariant  String? @map("size_variant")
  productUrl   String? @map("product_url")
  quantity     Int     @default(1)
  priority     Int     @default(3)
  createdAt    DateTime @default(now()) @map("created_at")

  list         GiftList      @relation(fields: [listId], references: [id])
  reservations Reservation[]

  @@map("gifts")
}

model Reservation {
  id          Int      @id @default(autoincrement())
  giftId      Int      @map("gift_id")
  userId      Int      @map("user_id")
  quantity    Int      @default(1)
  isPurchased Boolean  @default(false) @map("is_purchased")
  createdAt   DateTime @default(now()) @map("created_at")

  gift Gift @relation(fields: [giftId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@map("reservations")
}

model ListAccess {
  id         Int      @id @default(autoincrement())
  listId     Int      @map("list_id")
  userId     Int      @map("user_id")
  accessedAt DateTime @default(now()) @map("accessed_at")

  list GiftList @relation(fields: [listId], references: [id])
  user User     @relation(fields: [userId], references: [id])

  @@map("list_access")
}